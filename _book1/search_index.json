[
["index.html", "Brain Signal Processing: Basics of EEG Analysis Prerequisites", " Brain Signal Processing: Basics of EEG Analysis Palani Thanaraj K 2020-03-30 Prerequisites This tutorial provides basics of EEG analysis with minimal coding using Python. So not much of technical knowledge is required for going through this tutorial. As and when some jargon is encountered it is provided with required information. Feel free to go through this tutorial. "],
["intro.html", "Chapter 1 Introduction 1.1 How EEG is used in clinical setting", " Chapter 1 Introduction EEG is the recording of electrical signals obtained from the scalp region of the human head. It is because of the activation of the pyramidal neurons in the cerebral cortex region of the brain (i.e outer layer of the brain). 1.1 How EEG is used in clinical setting EEG represents the functional operation of the brain. The EEG signal is also referred to as Brain Waves that are named based on the frequency component in the signal. They are Delta, Theta, Alpha, Beta, and Gamma brain waves. Their frequency component falls in the range of 1-3,3-7,7-13,13-30 and &gt;30 Hz respectively. EEG is used in the management of brain disorders such as Epilepsy, Schizophrenia (SZ) and Alzhemier’s disease. In this tutorial, we will discuss about some aspects of Schizophrenia disease and its assessment using EEG signal. "],
["what-is-schizophrenia-condition.html", "Chapter 2 What is Schizophrenia condition? 2.1 Dataset", " Chapter 2 What is Schizophrenia condition? Schizophrenia is a detrimental condition of the brain which leads to reduction in the cognitive awareness. The patients affected by this disease try to have impairment in assessing day-to-day activities. EEG is an important modality that can detect the SZ occurrence in an individual. The EEG signal shows low randomness compared to a healthy person. Here we will take few EEG signal of normal and SZ patients and analyse them. 2.1 Dataset The SZ dataset which we are going to analyse here is from “EEG in schizophrenia (RepOD)” from the seminal works of (Olejarczyk and Jernajczyk 2017a). The dataset comprised 14 patients with paranoid schizophrenia and 14 healthy controls. Data were acquired with the sampling frequency of 250 Hz using the standard 10-20 EEG montage with 19 EEG channels: Fp1, Fp2, F7, F3, Fz, F4, F8, T3, C3, Cz, C4, T4, T5, P3, Pz, P4, T6, O1, O2. The reference electrode was placed between electrodes Fz and Cz. References "],
["eeg-data-import-analysis.html", "Chapter 3 EEG data import &amp; Analysis 3.1 MNE Library for EEG Analysis 3.2 Data Import 3.3 Time series plot of the EEG signal 3.4 Bandpass filtering of the EEG signal 3.5 The power spectral density (PSD)function of the EEG signal 3.6 More Links", " Chapter 3 EEG data import &amp; Analysis The EEG data is available in the ’*.edf’ file extension. We have to download the EEG files and place in the working directory of the Python program such as Jupyter notebook or Spyder. Then we will be using the MNE Python library for the processing of the EEG signal. The following section provides the code block for import the necessary library files for EEG analysis. 3.1 MNE Library for EEG Analysis import mne # MNE library for EEG analysis import matplotlib.pyplot as plt # Plotting library plt.style.use(&#39;seaborn-bright&#39;) # Plot Style plt.rcParams[&#39;figure.dpi&#39;] = 300 # DPI setting plt.rcParams[&#39;figure.figsize&#39;] = (8, 6) 3.2 Data Import This code chunk explains how to import the EEG file into the Python workspace by the command mne.io.read_raw_edf. Moreover, it also shows the file info of the EEG file imported into the workspace. # Data import raw_h = mne.io.read_raw_edf(&quot;h01.edf&quot;, preload=True)# Import data file into workspace # h01 specifies the EEG record of healthy control-1 ## Extracting EDF parameters from C:\\Users\\RajuPC\\Documents\\MyR\\MyGitbook\\EEG\\EEG_analysis\\h01.edf... ## EDF file detected ## Setting channel info structure... ## Creating raw.info structure... ## Reading 0 ... 231249 = 0.000 ... 924.996 secs... raw_s = mne.io.read_raw_edf(&quot;s01.edf&quot;, preload=True)# Import data file into workspace # s01 specifies the EEG record of SZ patient-1 # Give the sample rate ## Extracting EDF parameters from C:\\Users\\RajuPC\\Documents\\MyR\\MyGitbook\\EEG\\EEG_analysis\\s01.edf... ## EDF file detected ## Setting channel info structure... ## Creating raw.info structure... ## Reading 0 ... 211249 = 0.000 ... 844.996 secs... print(&#39;sample rate:&#39;, raw_h.info[&#39;sfreq&#39;], &#39;Hz&#39;) # Give the size of the data matrix ## sample rate: 250.0 Hz print(&#39;Data matrix size : %s channels x %s samples&#39; % (raw_h.info[&#39;nchan&#39;], len(raw_h.times))) ## Data matrix size : 19 channels x 231250 samples print(&#39;Channel names:&#39;, raw_h.info[&#39;ch_names&#39;]) ## Channel names: [&#39;Fp2&#39;, &#39;F8&#39;, &#39;T4&#39;, &#39;T6&#39;, &#39;O2&#39;, &#39;Fp1&#39;, &#39;F7&#39;, &#39;T3&#39;, &#39;T5&#39;, &#39;O1&#39;, &#39;F4&#39;, &#39;C4&#39;, &#39;P4&#39;, &#39;F3&#39;, &#39;C3&#39;, &#39;P3&#39;, &#39;Fz&#39;, &#39;Cz&#39;, &#39;Pz&#39;] 3.3 Time series plot of the EEG signal This code plots the raw EEG signal using the available function plot. Healthy Individual # Plotting the raw EEG signal raw_h.plot(start=300,duration=2, block=True, show=False, color=&#39;green&#39;) SZ Patient # Plotting the raw EEG signal raw_s.plot(start=300,duration=2, block=True, show=False, color=&#39;red&#39;) 3.4 Bandpass filtering of the EEG signal This code applies a FIR filter based on windowing technique to design a bandpass filter with lower cut-off frequency at 0.5Hz and upper cut-off frequency at 100Hz. Healthy Control xfil_h=raw_h.filter(0.5, 100., fir_design=&#39;firwin&#39;)#Bandpass filtering ## Filtering raw data in 1 contiguous segment ## Setting up band-pass filter from 0.5 - 1e+02 Hz ## ## FIR filter parameters ## --------------------- ## Designing a one-pass, zero-phase, non-causal bandpass filter: ## - Windowed time-domain design (firwin) method ## - Hamming window with 0.0194 passband ripple and 53 dB stopband attenuation ## - Lower passband edge: 0.50 ## - Lower transition bandwidth: 0.50 Hz (-6 dB cutoff frequency: 0.25 Hz) ## - Upper passband edge: 100.00 Hz ## - Upper transition bandwidth: 25.00 Hz (-6 dB cutoff frequency: 112.50 Hz) ## - Filter length: 1651 samples (6.604 sec) xfil_h.plot(start=300, duration=2, bgcolor=&#39;w&#39;,show=False, events=None,proj=False,color=&#39;green&#39;)#plotting of the filtered signal SZ patient xfil_s=raw_s.filter(0.5, 100., fir_design=&#39;firwin&#39;)#Bandpass filtering ## Filtering raw data in 1 contiguous segment ## Setting up band-pass filter from 0.5 - 1e+02 Hz ## ## FIR filter parameters ## --------------------- ## Designing a one-pass, zero-phase, non-causal bandpass filter: ## - Windowed time-domain design (firwin) method ## - Hamming window with 0.0194 passband ripple and 53 dB stopband attenuation ## - Lower passband edge: 0.50 ## - Lower transition bandwidth: 0.50 Hz (-6 dB cutoff frequency: 0.25 Hz) ## - Upper passband edge: 100.00 Hz ## - Upper transition bandwidth: 25.00 Hz (-6 dB cutoff frequency: 112.50 Hz) ## - Filter length: 1651 samples (6.604 sec) xfil_s.plot(start=300, duration=2, bgcolor=&#39;w&#39;,show=False, events=None,proj=False,color=&#39;red&#39;)#plotting of the filtered signal 3.5 The power spectral density (PSD)function of the EEG signal This code performs the Power Spectral Density (PSD) function of the Filtered EEG signal. Healthy Control xfil_h.plot_psd(area_mode=&#39;range&#39;, tmax=10.0, show=False, average=True, color=&#39;green&#39;) SZ Patient xfil_s.plot_psd(area_mode=&#39;range&#39;, tmax=10.0, show=False, average=True, color=&#39;red&#39;) 3.6 More Links More information related to applications of EEG in brain disorders can be found in the following articles: (T. Krishnan, Balasubramanian, and Krishnan 2016) (Thanaraj and Chitra 2014) (P. T. Krishnan and Balasubramanian 2017) (P. T. Krishnan, Balasubramanian, and Krishnan 2017) (Thanaraj and Parvathavarthini 2017) (Abhinaya and Charanya 2016) (Johannesen et al. 2016) (Götz et al. 2017) (Thilakvathi et al. 2017) (Olejarczyk and Jernajczyk 2017b) References "],
["references.html", "References", " References "]
]
