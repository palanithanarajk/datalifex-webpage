[
["index.html", "Exploratory Data Analysis Using R: Biomedial Data Preface", " Exploratory Data Analysis Using R: Biomedial Data Palani Thanaraj K April 2, 2019 Preface Data Science is the new buzz word in every engineering and technology field. It is used for data extraction, data analysis, data visualization and data modeling. Recently, data science is applied to biomedical field to acquire knowledge about disease occurrence and diagnosis. This introductory book provides few fundamentals about biostatistics and statistical modeling. "],
["prerequisite.html", "Prerequisite", " Prerequisite The reqirement for the readers of this book are the following: Requirement R software installed in your computer An IDE for R (Many use RStudio) Some basic knowledge about graphs and statistics "],
["introduction.html", "1 Introduction 1.1 Dataset 1.2 Data Exploration 1.3 Descriptive statistics", " 1 Introduction The center of any complex engineering application or analyis is the data/dataset. It is the root node that entire organizations and corporations run their business. There is a famous saying nowadays that Data is the new oil. In this book, we are going to focus about analyzing biomedical data. 1.1 Dataset The biomedical data we are going to use is obtained from Kaggle website. The dataset contains information about diabetes of cohort of sample subjects. This dataset arises from a research study of the National Institute of Diabetes and Digestive and Kidney Diseases. The purpose of the dataset is to predict whether or not a patient has diabetes. It is based on certain test measurements included in the dataset. Here, the patients are all females at least 21 years old of Pima Indian heritage. The datasets consists of several medical predictors/features and one target/response variable named as Outcome. We will first import the dataset into the workspace. Before that we have setup the Rstudio for carrying out the analysis. First, set the working directory using setwd(). Second, import the required library into the R Markdown file. It is shown here. setwd(&quot;C:/Users/RajuPC/Documents/MyR/RajuBook&quot;) library(tidyverse) #Required for analysis, visualization library(plotly) # Required for interactive plotting of graphs library(ggsci) #Themes package for the plots diab&lt;-read_csv(&quot;diabetes.csv&quot;) # It reads the CSV file and assigns to diab object 1.2 Data Exploration The diab is a R data frame and we can see the data in many as follows: head(diab) # Elements of first few rows ## # A tibble: 6 x 9 ## Pregnancies Glucose BloodPressure SkinThickness Insulin BMI ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 6 148 72 35 0 33.6 ## 2 1 85 66 29 0 26.6 ## 3 8 183 64 0 0 23.3 ## 4 1 89 66 23 94 28.1 ## 5 0 137 40 35 168 43.1 ## 6 5 116 74 0 0 25.6 ## # ... with 3 more variables: DiabetesPedigreeFunction &lt;dbl&gt;, Age &lt;int&gt;, ## # Outcome &lt;int&gt; tail(diab) # Elements of Last few rows ## # A tibble: 6 x 9 ## Pregnancies Glucose BloodPressure SkinThickness Insulin BMI ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 9 89 62 0 0 22.5 ## 2 10 101 76 48 180 32.9 ## 3 2 122 70 27 0 36.8 ## 4 5 121 72 23 112 26.2 ## 5 1 126 60 0 0 30.1 ## 6 1 93 70 31 0 30.4 ## # ... with 3 more variables: DiabetesPedigreeFunction &lt;dbl&gt;, Age &lt;int&gt;, ## # Outcome &lt;int&gt; colnames(diab) #Names of Columns which are the names of predictors and outcome variables ## [1] &quot;Pregnancies&quot; &quot;Glucose&quot; ## [3] &quot;BloodPressure&quot; &quot;SkinThickness&quot; ## [5] &quot;Insulin&quot; &quot;BMI&quot; ## [7] &quot;DiabetesPedigreeFunction&quot; &quot;Age&quot; ## [9] &quot;Outcome&quot; str(diab) # Structure of the dataset ## Classes &#39;tbl_df&#39;, &#39;tbl&#39; and &#39;data.frame&#39;: 768 obs. of 9 variables: ## $ Pregnancies : int 6 1 8 1 0 5 3 10 2 8 ... ## $ Glucose : int 148 85 183 89 137 116 78 115 197 125 ... ## $ BloodPressure : int 72 66 64 66 40 74 50 0 70 96 ... ## $ SkinThickness : int 35 29 0 23 35 0 32 0 45 0 ... ## $ Insulin : int 0 0 0 94 168 0 88 0 543 0 ... ## $ BMI : num 33.6 26.6 23.3 28.1 43.1 25.6 31 35.3 30.5 0 ... ## $ DiabetesPedigreeFunction: num 0.627 0.351 0.672 0.167 2.288 ... ## $ Age : int 50 31 32 21 33 30 26 29 53 54 ... ## $ Outcome : int 1 0 1 0 1 0 1 0 1 1 ... ## - attr(*, &quot;spec&quot;)=List of 2 ## ..$ cols :List of 9 ## .. ..$ Pregnancies : list() ## .. .. ..- attr(*, &quot;class&quot;)= chr &quot;collector_integer&quot; &quot;collector&quot; ## .. ..$ Glucose : list() ## .. .. ..- attr(*, &quot;class&quot;)= chr &quot;collector_integer&quot; &quot;collector&quot; ## .. ..$ BloodPressure : list() ## .. .. ..- attr(*, &quot;class&quot;)= chr &quot;collector_integer&quot; &quot;collector&quot; ## .. ..$ SkinThickness : list() ## .. .. ..- attr(*, &quot;class&quot;)= chr &quot;collector_integer&quot; &quot;collector&quot; ## .. ..$ Insulin : list() ## .. .. ..- attr(*, &quot;class&quot;)= chr &quot;collector_integer&quot; &quot;collector&quot; ## .. ..$ BMI : list() ## .. .. ..- attr(*, &quot;class&quot;)= chr &quot;collector_double&quot; &quot;collector&quot; ## .. ..$ DiabetesPedigreeFunction: list() ## .. .. ..- attr(*, &quot;class&quot;)= chr &quot;collector_double&quot; &quot;collector&quot; ## .. ..$ Age : list() ## .. .. ..- attr(*, &quot;class&quot;)= chr &quot;collector_integer&quot; &quot;collector&quot; ## .. ..$ Outcome : list() ## .. .. ..- attr(*, &quot;class&quot;)= chr &quot;collector_integer&quot; &quot;collector&quot; ## ..$ default: list() ## .. ..- attr(*, &quot;class&quot;)= chr &quot;collector_guess&quot; &quot;collector&quot; ## ..- attr(*, &quot;class&quot;)= chr &quot;col_spec&quot; 1.3 Descriptive statistics Here using a summary() function one can easily obtain the descriptive statistics of the imported dataframe. summary(diab) ## Pregnancies Glucose BloodPressure SkinThickness ## Min. : 0.000 Min. : 0.0 Min. : 0.00 Min. : 0.00 ## 1st Qu.: 1.000 1st Qu.: 99.0 1st Qu.: 62.00 1st Qu.: 0.00 ## Median : 3.000 Median :117.0 Median : 72.00 Median :23.00 ## Mean : 3.845 Mean :120.9 Mean : 69.11 Mean :20.54 ## 3rd Qu.: 6.000 3rd Qu.:140.2 3rd Qu.: 80.00 3rd Qu.:32.00 ## Max. :17.000 Max. :199.0 Max. :122.00 Max. :99.00 ## Insulin BMI DiabetesPedigreeFunction Age ## Min. : 0.0 Min. : 0.00 Min. :0.0780 Min. :21.00 ## 1st Qu.: 0.0 1st Qu.:27.30 1st Qu.:0.2437 1st Qu.:24.00 ## Median : 30.5 Median :32.00 Median :0.3725 Median :29.00 ## Mean : 79.8 Mean :31.99 Mean :0.4719 Mean :33.24 ## 3rd Qu.:127.2 3rd Qu.:36.60 3rd Qu.:0.6262 3rd Qu.:41.00 ## Max. :846.0 Max. :67.10 Max. :2.4200 Max. :81.00 ## Outcome ## Min. :0.000 ## 1st Qu.:0.000 ## Median :0.000 ## Mean :0.349 ## 3rd Qu.:1.000 ## Max. :1.000 Factoring the variables Factors are special type of datatype in R. It is used for categorical variables. But here the outcome variable is specified as integer. It is better to represent categorical variables as factors in R. This can be done as follows: diab$Outcome&lt;-factor(diab$Outcome) class(diab$Outcome) ## [1] &quot;factor&quot; "],
["data-visualization.html", "2 Data Visualization 2.1 Relation of diabetes and pregnancies 2.2 Relation between Glucose, Blood Pressure, Age, Pregnancy", " 2 Data Visualization Mere numbers and tables would not always provide the required information for any decision making. It is necessary that we gather some visual patterns, trends from the data to support any decision making process. This is where the data visuaization helps in getting visual perspective of the data. Basic plots such as scatter plot, bar chart, box-plot, histogram plot are great tools to provide intuitive information about the data. 2.1 Relation of diabetes and pregnancies First we try to gather the relationship between occurrence of diabetes disease and age of the subjects with the pregnancies. 2.1.1 Scatter plot p1&lt;-ggplot(diab,aes(x=Age,y=Pregnancies,col=Outcome))+geom_point()+geom_smooth(method=&quot;loess&quot;, se=T)+facet_grid(.~Outcome) ggplotly(p1) The above plot also shows the trend modeled through Loess method for the data provided. 2.1.2 Boxplot The plot shows the details about pregnancies and its distribution across the age of the subjects with diabetes outcome p2&lt;-ggplot(diab,aes(x=Age,y=Pregnancies))+geom_boxplot(aes(fill=Outcome))+facet_wrap(Outcome~.) ggplotly(p2) 2.1.3 Density Plot Through the density plot we can find the distribution of univariate variables in our case the pregnancies of the test subjects p3&lt;-ggplot(diab,aes(x=Pregnancies))+geom_density(aes(fill=Outcome),alpha=0.6)+ geom_vline(aes(xintercept=mean(Pregnancies)), color=&quot;blue&quot;, linetype=&quot;dashed&quot;, size=1)+facet_grid(.~Outcome)+scale_fill_aaas() ggplotly(p3) 2.2 Relation between Glucose, Blood Pressure, Age, Pregnancy 2.2.1 Scatter Plot p3&lt;-ggplot(diab,aes(x=Age, y=Pregnancies, size=Glucose, fill=BloodPressure))+geom_point(alpha=0.2)+ facet_grid(.~Outcome)+geom_jitter(width = 0.4)+scale_x_continuous(limits = c(18, 80))+scale_fill_material(&quot;red&quot;) ggplotly(p3) "]
]
